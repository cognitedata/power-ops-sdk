space: "{{powerops_models}}"
externalId: MarketConfiguration
name: MarketConfiguration
description: Market configuration
filter:
  and:
    - hasData:
        - type: container
          space: "{{powerops_models}}"
          externalId: MarketConfiguration
    - equals:
        property:
          - node
          - space
        value: "{{powerops_instance_space}}"
    - equals:
        property:
          - node
          - type
        value:
          externalId: MarketConfiguration
          space: "{{powerops_type_space}}"
implements: []
version: "{{version}}"
properties:
  name:
    container:
      space: "{{powerops_models}}"
      externalId: MarketConfiguration
      type: container
    containerPropertyIdentifier: name
    name: name
    description: The name of the market
  maxPrice:
    container:
      space: "{{powerops_models}}"
      externalId: MarketConfiguration
      type: container
    containerPropertyIdentifier: maxPrice
    name: maxPrice
    description: The highest price allowed
  minPrice:
    container:
      space: "{{powerops_models}}"
      externalId: MarketConfiguration
      type: container
    containerPropertyIdentifier: minPrice
    name: minPrice
    description: The lowest price allowed
  timeZone:
    container:
      space: "{{powerops_models}}"
      externalId: MarketConfiguration
      type: container
    containerPropertyIdentifier: timeZone
    name: timeZone
  priceUnit:
    container:
      space: "{{powerops_models}}"
      externalId: MarketConfiguration
      type: container
    containerPropertyIdentifier: priceUnit
    name: priceUnit
    description: Unit of measurement for the price ('EUR/MWh')
  priceSteps:
    container:
      space: "{{powerops_models}}"
      externalId: MarketConfiguration
      type: container
    containerPropertyIdentifier: priceSteps
    name: priceSteps
    description: The maximum number of price steps
  tickSize:
    container:
      space: "{{powerops_models}}"
      externalId: MarketConfiguration
      type: container
    containerPropertyIdentifier: tickSize
    name: tickSize
    description: "'Granularity' of the price; tick size = 0.1 means that prices must be 'rounded to nearest 0.1' (i. e. 66.43 is not allowed, but 66.4 is)"
  timeUnit:
    container:
      space: "{{powerops_models}}"
      externalId: MarketConfiguration
      type: container
    containerPropertyIdentifier: timeUnit
    name: timeUnit
    description: The time unit ('1h')
  tradeLot:
    container:
      space: "{{powerops_models}}"
      externalId: MarketConfiguration
      type: container
    containerPropertyIdentifier: tradeLot
    name: tradeLot
    description: "'Granularity' of the volumes; trade lot = 0.2 means that volumes must be 'rounded to nearest 0.2' (i. e. 66.5 is not allowed, but 66.4 is)"
