type Bid @container(indexes: [{identifier : "startCalculation", fields : ["startCalculation"]}, {identifier : "endCalculation", fields : ["endCalculation"]}, {identifier : "date", fields : ["date"]}]) {
  name: String
  method: BidMethod
  priceArea: String
  date: Date
  total: JSONObject
  startCalculation: Timestamp!
  endCalculation: Timestamp
  market: MarketPriceArea
  alerts: [Alert] @relation(type: {space : "poweropsFrontendContractModel", externalId : "Bid.alerts"})
  partials: [BidTable]
}

interface BidMethod {
  name: String!
}

type SHOP implements BidMethod @view(rawFilter: {prefix : {property : ["node", "externalId"], value : "SHOP"}}) @container(constraints: [{identifier : "requiredBidMethod", constraintType : REQUIRES, require : {space : "poweropsDayAheadFrontendContractModel", externalId : "BidMethod"}}]) {
  name: String!
  shopCases: [String]
  priceScenarios: TimeSeries
}

type WaterValueBased implements BidMethod @view(rawFilter: {prefix : {property : ["node", "externalId"], value : "WVB"}}) {
  name: String!
}

type MarketPriceArea {
  name: String
  priceArea: String
  defaultMethod: BidMethod
  timezone: String
  mainScenario: TimeSeries
  priceScenarios: [TimeSeries]
}

interface BidTable {
  resourceCost: String
  table: Sequence
  assetType: String
  asset_id: String
  alerts: [Alert] @relation(type: {space : "poweropsFrontendContractModel", externalId : "BidTable.alerts"})
}

type SHOPTable implements BidTable @view(rawFilter: {prefix : {property : ["node", "externalId"], value : "SHOP"}}) {
  resourceCost: String
  table: Sequence
  assetType: String
  asset_id: String
  alerts: [Alert] @relation(type: {space : "poweropsFrontendContractModel", externalId : "SHOPTable.alerts"})
  productionPricePair: ProductionPricePair
}

type ProductionPricePair {
  production: TimeSeries
  price: TimeSeries
}
