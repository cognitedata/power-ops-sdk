name: release

on:
  push:
    branches: [main]

env:
  PYTHON_VERSION: "3.10"

jobs:
  test_and_release:
    runs-on: ubuntu-latest
    environment: CD
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install core dependencies
        run: |
          python3 -m pip install --upgrade pip poetry
          poetry config virtualenvs.create false
          poetry install

      - name: Test
        env:
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          CLIENT_ID: ${{ vars.CLIENT_ID }}
          PROJECT: ${{ vars.PROJECT }}
          CLUSTER: ${{ vars.CLUSTER }}
          TENANT_ID: ${{ vars.TENANT_ID }}
        run: pytest --cov --cov-report term --cov-report xml:coverage.xml

      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Build package
        run: poetry build

      - name: Release to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        shell: bash
        run: twine upload --skip-existing --verbose dist/*
