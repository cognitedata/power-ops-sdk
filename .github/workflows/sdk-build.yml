name: build

on:
  pull_request:
    branches: [main]

env:
  PYTHON_VERSION: "3.10"
  CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
  CLIENT_ID: ${{ vars.CLIENT_ID }}
  PROJECT: ${{ vars.PROJECT }}
  CLUSTER: ${{ vars.CLUSTER }}
  TENANT_ID: ${{ vars.TENANT_ID }}

jobs:
  lint:
    runs-on: ubuntu-latest
    environment: CI
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # The installation is required as mypy must be run in the local system environment, not in the pre-commit environment.
      - name: Install required dependencies
        run: |
          python3 -m pip install --upgrade pip poetry
          poetry config virtualenvs.create false
          poetry install

      - name: Linting and static code checks
        run: |
          pre-commit run --all-files

  tests:
    runs-on: ubuntu-latest
    environment: CI
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install core dependencies
        run: |
          python3 -m pip install --upgrade pip poetry
          poetry config virtualenvs.create false
          poetry install

      - name: Test
        run: pytest --cov --cov-report term --cov-report xml:coverage.xml

      - uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5
        if: matrix.python-version == ${{ env.PYTHON_VERSION }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Build package
        run: poetry build
