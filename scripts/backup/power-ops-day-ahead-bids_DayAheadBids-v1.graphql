type BidDocument @container(indexes: [{identifier : "date", fields : ["date"]}]) {
  name: String
  method: BidMethod
  priceArea: PriceArea
  date: Date
  total: BidTable
  startCalculation: Timestamp
  endCalculation: Timestamp
  isComplete: Boolean! @default(value: "false")
  alerts: [Alert] @relation(type: {space : "power-ops-day-ahead-bids", externalId : "Bid.alerts"})
  partials: [BidTable] @relation(type: {space : "power-ops-day-ahead-bids", externalId : "Bid.partials"})
}

type Alert {
  time: Timestamp! @mapping(space: "power-ops-base-bids")
  title: String! @mapping(space: "power-ops-base-bids")
  description: String @mapping(space: "power-ops-base-bids")
  severity: String @mapping(space: "power-ops-base-bids")
  alertType: String @mapping(space: "power-ops-base-bids")
  statusCode: Int @mapping(space: "power-ops-base-bids")
  eventIds: [Int64] @mapping(space: "power-ops-base-bids")
  calculationRun: String @mapping(space: "power-ops-base-bids")
}

interface BidMethod {
  name: String!
}

type SHOPMultiScenario implements BidMethod @view(rawFilter: {prefix : {property : ["node", "externalId"], value : "SHOP"}}) @container(constraints: [{identifier : "requiredBidMethod", constraintType : REQUIRES, require : {space : "power-ops-day-ahead-bids", externalId : "BidMethod"}}]) {
  name: String!
  shopCases: [String]
  priceScenarios: [TimeSeries]
}

type WaterValueBased implements BidMethod @view(rawFilter: {prefix : {property : ["node", "externalId"], value : "WVB"}}) {
  name: String!
}

type PriceArea {
  name: String
  defaultMethod: BidMethod
  timezone: String
  mainScenario: TimeSeries
  priceScenarios: [TimeSeries]
}

interface BidTable {
  resourceCost: String
  table: Sequence
  assetType: String
  assetId: String
  alerts: [Alert]
}

type SHOPTable implements BidTable @view(rawFilter: {prefix : {property : ["node", "externalId"], value : "SHOP"}}) {
  resourceCost: String
  table: Sequence
  assetType: String
  assetId: String
  alerts: [Alert]
  productionPricePairs: [ProductionPricePair]
}

type ProductionPricePair {
  production: TimeSeries
  price: TimeSeries
}
